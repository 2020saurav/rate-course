-q1data = q1data
-q2data = q2data
extends layout
block content
    script(src="/js/nvd3/lib/d3.v3.js")
    script(src="/js/nvd3/nv.d3.js")
    script(src="/js/nvd3/src/utils.js")
    script(src="/js/nvd3/src/models/pie.js")
    script.
        $(document).ready(function(){
            $(".glyphicon-minus-sign").hide();
            $(".label-default").hide();
            $(".label-success").hide();
            $(".label-primary").hide();
            $(".label-danger").hide();
            $(".label-warning").hide();
            $(".label-info").hide();
        });
        var q1data = !{JSON.stringify(q1data)};
        var q2data = !{JSON.stringify(q2data)};
        function reportSpam (reviewId)
            {
                $.post('/review/spam/'+reviewId+'/');
            }
        nv.addGraph(function() {
          var chart = nv.models.pieChart()
              .x(function(d) { return d.label })
              .y(function(d) { return d.value })
              .showLabels(true)     //Display pie labels
              .labelThreshold(0.05)  //Configure the minimum slice size for labels to show up
              .labelType("percent") //Configure what type of data to show in the label. Can be "key", "value" or "percent"
              .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!
              .donutRatio(0.35)     //Configure how big you want the donut hole size to be.
              .width(300)
              .height(400)
              ;
                    d3.select("#chart1 svg")
                .datum(q1data)
                .transition().duration(350)
                .attr('width', 300)
                .attr('height', 400)
                .call(chart);
                  return chart;
        });
        nv.addGraph(function() {
          var chart = nv.models.pieChart()
              .x(function(d) { return d.label })
              .y(function(d) { return d.value })
              .showLabels(true)     //Display pie labels
              .labelThreshold(0)  //Configure the minimum slice size for labels to show up
              .labelType("percent") //Configure what type of data to show in the label. Can be "key", "value" or "percent"
              .donut(true)          //Turn on Donut mode. Makes pie chart look tasty!
              .donutRatio(0.35)     //Configure how big you want the donut hole size to be.
              .width(300)
              .height(400)
              ;
                    d3.select("#chart2 svg")
                .datum(q2data)
                .transition().duration(350)
                .attr('width', 300)
                .attr('height', 400)
                .call(chart);
                  return chart;
        });
        function exampleData() {
          return  [
              {
                label: q1data[0].label,
                value : q1data[0].value
              } ,
              {
                label: q1data[1].label,
                value : q1data[1].value
              } ,
              {
                label: q1data[2].label,
                value : q1data[2].value
              } ,
              {
                label: q1data[3].label,
                value : q1data[3].value
              } ,
              {
                label: q1data[4].label,
                value : q1data[4].value
              }
            ];
        }
    div.container
        -course=courseOffering
        -professor=course.professor
        -ratingValues=course.cumulative_rating_values
        -ratings=course.ratings
        div.col-md-9
            div.row
                div.box-shadow(style="width:100%").row
                    h1 #{course.course.course_number} #{course.course.course_name}
                    div.row
                        h4.col-md-10 Year #{course.year} Semester #{course.semester} by Professor #{professor.first_name} #{professor.last_name}
                        div.col-md-2
                            a.btn.btn-success(href='rate/')
                                b &emsp; RATE &emsp;
            div.row
                h3 Average Ratings by Students
                div.box-shadow.row(style="width:100%")
                    - for ratingValue in ratingValues
                        div.row
                            div.col-md-8
                                h4 #{ratingValue.rating_param.name}
                            div.col-md-4
                                input.rating.form-control(type="number" value="#{ratingValue.value}" min=0 max=5 step=0.1 data-size="xs" disabled="true")
                div.row
                h3 Reviews
                -for rating in ratings
                    - review = rating.review
                    - user = rating.user
                    - var timeago = moment(String(rating.create_time),"X").fromNow();
                    - var actualTime = moment.unix(rating.create_time).format("YYYY-MM-DD HH:mm");
                    - if((review.is_deleted==false)&&(review.prof_comment!=="" || review.course_comment!=="")){

                    div.box-shadow.row(style="padding:15px 0px 10px; width:100%")
                        div.col-md-1
                            -if(rating.as_anon==false){
                            a(href="/user/#{user.login}/")
                                -if(user.photo_url){
                                img(src="#{user.photo_url}" width="150%" style="max-width:100px;")
                                -} else {
                                img(src="/images/anon.jpg" width="150%" style="max-width:100px;")
                                -}
                            -} else {
                            img(src="/images/anon.jpg" width="150%" style="max-width:100px;")
                            -}
                        div.col-md-11
                            -if(rating.as_anon==false){
                            a(href="/user/#{user.login}/")
                                b #{user.first_name} #{user.last_name}
                            -} else {
                            b Anonymous
                            -}
                            small.pull-right
                                a(href="#" style="color:#333333" title="#{actualTime}") #{timeago}
                            br
                            b Course:
                            |  #{review.course_comment}
                            br
                            b Professor:
                            |  #{review.prof_comment}
                            br
                            small
                                -if(session.user) {
                                a(onclick="reportSpam(#{review.id}); this.innerHTML='Reported';").pull-right Report Spam
                                -} else {
                                a(onclick="this.innerHTML='Please login to report';").pull-right Report Spam
                                -}
                    -}
        div.col-md-3
            h2(align="center") Overall Rating
            div#chart1(style="height:350px")
                svg
            h2.pull-right Grading Consistency
            div#chart2(style="height:350px")
                svg
